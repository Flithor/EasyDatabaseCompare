<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EasyDatabaseCompare"
                    xmlns:cv="clr-namespace:EasyDatabaseCompare.Converter"
                    xmlns:model="clr-namespace:EasyDatabaseCompare.Model">
    <ControlTemplate TargetType="local:TopMsg"
                     x:Key="topMsgTemp">
        <ControlTemplate.Resources>
            <Storyboard x:Key="showAnime"
                        FillBehavior="HoldEnd">
                <DoubleAnimation To="1"
                                 Storyboard.TargetProperty="Opacity"
                                 Storyboard.TargetName="MsgDisplay"
                                 Duration="0:0:0.5">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
            <Storyboard x:Key="hideAnime"
                        FillBehavior="HoldEnd">
                <DoubleAnimation To="0"
                                 Storyboard.TargetProperty="Opacity"
                                 Storyboard.TargetName="MsgDisplay"
                                 Duration="0:0:0.5">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
        </ControlTemplate.Resources>
        <!--<ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Shown">
                <BeginStoryboard Storyboard="{StaticResource showAnime}"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="Hidden">
                <BeginStoryboard Storyboard="{StaticResource hideAnime}"/>
            </EventTrigger>
        </ControlTemplate.Triggers>-->
        <Grid Name="topMsgGrid">
            <ContentPresenter Content="{TemplateBinding Content}" />
            <Border Name="MsgDisplay"
                    Background="#7F000000"
                    IsHitTestVisible="False"
                    CornerRadius="10"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Padding="20,10"
                    Opacity="0">
                <Label Name="MsgContent"
                       Foreground="White"
                       FontSize="20"
                       FontWeight="Bold">
                    <Label.Effect>
                        <DropShadowEffect BlurRadius="2"
                                          ShadowDepth="2"
                                          Opacity="0.7" />
                    </Label.Effect> TestMsg
                </Label>
            </Border>
        </Grid>
    </ControlTemplate>
    <Style TargetType="{x:Type TextBox}"
           x:Key="filterTBoxStyle">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused"
                               Value="False" />
                    <Condition Property="Text"
                               Value="" />
                </MultiTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <VisualBrush AlignmentX="Left"
                                     AlignmentY="Center"
                                     Stretch="None"
                                     ViewboxUnits="RelativeToBoundingBox"
                                     ViewportUnits="RelativeToBoundingBox"
                                     Viewbox="-0.1,0,1,1">
                            <VisualBrush.Visual>
                                <TextBlock Foreground="Silver">Filter</TextBlock>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
        <Setter Property="Text"
                Value="{x:Null}" />
    </Style>
    <VisualBrush Stretch="None"
                 AlignmentX="Left"
                 x:Key="click2LeftBgBrush">
        <VisualBrush.Visual>
            <TextBlock Foreground="Silver"
                       ScrollViewer.VerticalScrollBarVisibility="Disabled">
                 <Span BaselineAlignment="Center"><Path x:Name="p"
                                                        Stroke="Silver"
                                                        Fill="Silver"
                                                        StrokeThickness="4">
                     <Path.Data>
                         <GeometryGroup>
                             <PathGeometry>
                                 M30,3 L6,3 L6,6 L0,3 L6,0 L6,3
                             </PathGeometry>
                         </GeometryGroup>
                     </Path.Data>
                 </Path>
                 </Span>
                 Click move to left</TextBlock>
        </VisualBrush.Visual>
    </VisualBrush>
    <!--<Path Fill="Black"
          Stroke="Black"
          StrokeThickness="1"
          x:Key="dblArrow">
        <Path.Data>M3,1 L4,1 L4,11 L1,7 L3,7 Z
            M6,1 L6,11 L7,11 L7,5 L9,5 Z</Path.Data>
    </Path>
    <Path Width="15"
          Height="15"
          Stroke="Black"
          StrokeThickness="2"
          Margin="0,1,0,0"
          x:Key="resetArrow">
        <Path.Data>M7.5,3 A4.5,4.5 0 1 0 12,7.5 
            M7.5,3 L7.5,4 L9,3 L7.5,2 L7.5,3</Path.Data>
    </Path>
    <PathGeometry x:Key="invTriangle">M0,0
        L16,0
        L8,8
        Z</PathGeometry>-->
    <!--<ControlTemplate TargetType="TextBox"
                     x:Key="FieldTextBoxTemp">
        <DockPanel ScrollViewer.VerticalScrollBarVisibility="Disabled">
            <Label Content="{TemplateBinding Tag}"
                   Padding="2,0"
                   HorizontalAlignment="Left"
                   BorderBrush="#FFABADB3"
                   BorderThickness="0,1,0,1" />
            <Border Name="Border"
                    BorderThickness="1"
                    BorderBrush="#FFABADB3">
                <ScrollViewer Margin="0"
                              x:Name="PART_ContentHost" />
            </Border>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused"
                     Value="True">
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="#FF3399FF" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="#FF3399FF" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>-->
    <ControlTemplate x:Key="contextMenuTemp"
                     TargetType="{x:Type ContextMenu}">
        <Border x:Name="Border"
                Background="White"
                BorderThickness="1">
            <Border.BorderBrush>
                <SolidColorBrush Color="#FF888888" />
            </Border.BorderBrush>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
            </ScrollViewer>
        </Border>
    </ControlTemplate>
    <!--<ControlTemplate x:Key="connFieldsList"
                     TargetType="ItemsControl">
        
    </ControlTemplate>-->
    <DataTemplate x:Key="TextBoxField"
                  DataType="model:ConnectionFieldInfo">
        <DockPanel ScrollViewer.VerticalScrollBarVisibility="Disabled">
            <Label Content="{Binding FieldName, Mode=OneWay}"
                   Padding="2,0"
                   HorizontalAlignment="Left"
                   BorderBrush="#FFABADB3"
                   BorderThickness="0,1,0,1" />
            <TextBox Text="{Binding FieldValue}" />
        </DockPanel>
    </DataTemplate>
    <cv:ToStringConverter x:Key="ToStringConverter" />
    <DataTemplate x:Key="CheckBoxField"
                  DataType="model:ConnectionFieldInfo">
        <DockPanel ScrollViewer.VerticalScrollBarVisibility="Disabled">
            <Label Content="{Binding FieldName, Mode=OneWay}"
                   Padding="2,0"
                   HorizontalAlignment="Left"
                   BorderBrush="#FFABADB3"
                   BorderThickness="0,1,0,1" />
            <ToggleButton Padding="0"
                          IsChecked="{Binding FieldValue, Converter={StaticResource ToStringConverter}}"
                          Content="{Binding IsChecked, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
        </DockPanel>
    </DataTemplate>
    <cv:ItemStringToArrayConverter x:Key="ItemStringToArrayConverter" />
    <DataTemplate x:Key="ComboBoxField"
                  DataType="model:ConnectionFieldInfo">
        <DockPanel ScrollViewer.VerticalScrollBarVisibility="Disabled">
            <Label Content="{Binding FieldName, Mode=OneWay}"
                   Padding="2,0"
                   HorizontalAlignment="Left"
                   BorderBrush="#FFABADB3"
                   BorderThickness="0,1,0,1" />
            <ComboBox Padding="3,1"
                      ItemsSource="{Binding FieldValue, Converter={StaticResource ItemStringToArrayConverter}, Mode=OneTime}"
                      SelectedItem="{Binding FieldValue}"
                      SelectedIndex="0" />
        </DockPanel>
    </DataTemplate>
    <DataTemplate x:Key="PasswordField"
                  DataType="model:ConnectionFieldInfo">
        <DockPanel ScrollViewer.VerticalScrollBarVisibility="Disabled">
            <Label Content="{Binding FieldName, Mode=OneWay}"
                   Padding="2,0"
                   HorizontalAlignment="Left"
                   BorderBrush="#FFABADB3"
                   BorderThickness="0,1,0,1" />
            <PasswordBox Padding="0"
                         Password="{Binding FieldValue}" />
        </DockPanel>
    </DataTemplate>
    <ItemsPanelTemplate x:Key="ConnFieldsList">
        <UniformGrid IsItemsHost="True"
                     Columns="{Binding Fields.Count}" />
    </ItemsPanelTemplate>
    <ControlTemplate x:Key="DataGridButtonCellTemplate"
                     TargetType="{x:Type Button}">
        <Border>
            <ContentPresenter x:Name="contentPresenter"
                              Focusable="False"
                              RecognizesAccessKey="False"
                              HorizontalAlignment="Center"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="Center" />
        </Border>
    </ControlTemplate>
</ResourceDictionary>